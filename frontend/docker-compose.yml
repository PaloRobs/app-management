version: "3.9"

networks:
  app-management-network:
     external: true

services:
  keycloak-postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data
    networks:
      - app-management-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: dashboard-keycloak
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123

      # Admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123

      # Hostname configuration
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8090
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      # HTTP configuration
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080

      # Logging
      KC_LOG_LEVEL: INFO
    command: start-dev
    ports:
       - "8090:8080"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    networks:
      - app-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./dashboard-app
      dockerfile: Dockerfile
    container_name: app-management-frontend
    ports:
      - "3000:80"
    networks:
      - app-management-network
      

volumes:
  keycloak-postgres-data:
